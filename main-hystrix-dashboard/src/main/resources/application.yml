
spring:
  profiles:
    active:
      - dev

info:
  category: zag

# https://www.jianshu.com/p/e9ce05b44150
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready
# http://blog.didispace.com/spring-boot-actuator-1/
#
# - **http://www.baeldung.com/spring-boot-actuators**
# - **https://blog.csdn.net/alinyua/article/details/80009435**
management:
  info:
    git.mode: full
  # security.enabled: false
  endpoint:
    health:
      show-details: always
  endpoints:
    # sensitive: false
    # metrics.sensitive: false
    # web.expose: "*"
    web.exposure:
      include: "*"
      exclude: beans

logging:
  level:
    root: INFO
    org.hibernate: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.hibernate.type.descriptor.sql.BasicExtractor: TRACE
    com.obsez.zag.persistence: ERROR
    com.obsez.zag.common: INFO
    com.obsez.zag.common.lb: DEBUG
    io.springfox: DEBUG
    com.obsez.zag.my-service: DEBUG

zuul:
  routes:
    api-a:
      path: /api-a/**
      serviceId: service-ribbon
    api-b:
      path: /api-b/**
      serviceId: service-feign

turbine:
  #combine-host-port: true
  aggregator:
    # 指定聚合哪些集群，多个使用","分割，默认为default。可使用http://.../turbine.stream?cluster={clusterConfig之一}访问
    clusterConfig: default
  clusterNameExpression: "'default'"  # ${spring.application.name}  # new String("default")
  # 1. clusterNameExpression指定集群名称，默认表达式appName；
  #    此时：turbine.aggregator.clusterConfig需要配置想要监控的应用名称
  # 2. 当clusterNameExpression: default时，turbine.aggregator.clusterConfig可以不写，因为默认就是default
  # 3. 当clusterNameExpression: metadata['cluster']时，假设想要监控的应用配
  #    置了eureka.instance.metadata-map.cluster: ABC，则需要配置，同时
  #    turbine.aggregator.clusterConfig: ABC
  appConfig: main-api-gateway,main-hystrix-dashboard,main-spring-boot-admin,service-demo-consumer,service-demo-provider
  # 配置Eureka中的serviceId列表，表明监控哪些服务
  #appConfig: ribbon-consumer,microservice-consumer-movie-feign-with-hystrix-stream,microservice-consumer-movie-ribbon-with-hystrix




---
spring:
  profiles: prod
  boot.admin.client:
    url: http://badmin.bi.ops.local:7777
    username:
    password:
    #instance:
      #metadata:
        #user.name: ${spring.security.user.name}
        #user.password: ${spring.security.user.password}

eureka:
  client:
    serviceUrl:
      #defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      defaultZone: http://registrar.bi.ops.local:8761/eureka/

---
spring:
  profiles: dev
  boot.admin.client:
    url: http://localhost:7777
    username:
    password:
    #instance:
      #metadata:
        #user.name: ${spring.security.user.name}
        #user.password: ${spring.security.user.password}

eureka:
  client:
    serviceUrl:
      #defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
      defaultZone: http://127.0.0.1:8761/eureka/

